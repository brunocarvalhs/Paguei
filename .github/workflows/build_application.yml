name: Build Application
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [ closed ]

jobs:
  build:
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        run: |
          mkdir ~/.gradle
          echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
          echo "org.gradle.jvmargs=-Xmx3072m" >> ~/.gradle/gradle.properties
       
      - name: Setup Android SDK
        run: |
          wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
          unzip sdk-tools-linux-4333796.zip -d $HOME/sdk
          echo "export ANDROID_HOME=$HOME/sdk" >> $GITHUB_ENV
          echo "export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
          echo y | $HOME/sdk/tools/bin/sdkmanager "platform-tools" "build-tools;29.0.3"
          echo y | $HOME/sdk/tools/bin/sdkmanager --licenses
          chmod +x $HOME/sdk/platform-tools/adb
          chmod +x $HOME/sdk/platform-tools/zipalign

      - name: Extract version from VERSION.md
        run: echo "::set-env name=version::$(cat VERSION.md)"

      - name: Get Build Date
        run: echo "::set-env name=date::$(date +%Y-%m-%d)"

      - name: Give gradlew execute permissions
        run: chmod +x gradlew

      - name: Copy google-services file
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Copy keystore file
        run: |
          echo ${{ secrets.KEYSTORE_FILE }} | base64 --decode > app/keystore.jks

      - name: Build Application Debug
        if: startsWith(github.ref, 'refs/heads/develop')
        run: env version="${{ env.version }}" ./gradlew assembleDebug
      
      - name: Build Application Release
        if: startsWith(github.ref, 'refs/heads/master')
        run: |
           env version="${{ env.version }}" ./gradlew bundleRelease
           zipalign -f -v 4 app-release.aab paguei-${{ env.version }}-${{ env.date }}-release.aab

      - name: Upload signed AAR
        uses: actions/upload-artifact@v2
        with:
          name: paguei-${{ env.version }}-${{ env.date }}.aar
          path: app/build/outputs/bundle/

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: paguei-${{ env.version }}-${{ env.date }}.apk
          path: app/build/outputs/apk/

      - name: Create Branch Release
        if: startsWith(github.ref, 'refs/heads/develop')
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ vars.TOKEN }}
        with:
          branch: release/v${{ env.version }}
          sha: '${{ github.event.pull_request.head.sha }}'
