name: Build Application
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [ closed ]

jobs:
  preparing_environment:
    runs-on: self-hosted
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        run: |
          mkdir ~/.gradle
          echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
          echo "org.gradle.jvmargs=-Xmx3072m" >> ~/.gradle/gradle.properties

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          android-sdk-tools: latest

      - name: Extract version from VERSION.md
        run: echo "::set-env name=version::$(cat VERSION.md)"

      - name: Get Build Date
        run: echo "::set-env name=date::$(date +%Y-%m-%d)"

      - name: Give gradlew execute permissions
        run: chmod +x gradlew

      - name: Create google-services release file
        if: startsWith(github.ref, 'refs/heads/master')
        run: |
          rm -f app/google-services.json
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

  unit_tests:
    needs: [ preparing_environment ]
    runs-on: self-hosted
    steps:
      - name: Run unit tests
        run: ./gradlew test

  build:
    needs: [ unit_tests ]
    runs-on: self-hosted
    steps:
      - name: Build Application Debug
        if: startsWith(github.ref, 'refs/heads/develop')
        run: env version="${{ env.version }}" ./gradlew assembleDebug

      - name: Build Application Release
        if: startsWith(github.ref, 'refs/heads/master')
        run: env version="${{ env.version }}" ./gradlew bundleRelease

  upload:
    needs: [ build ]
    name: Upload the signed artifact
    runs-on: self-hosted
    steps:

      - name: Upload AAB
        if: startsWith(github.ref, 'refs/heads/master')
        uses: actions/upload-artifact@v2
        with:
          name: paguei-${{ env.version }}-${{ env.date }}
          path: app/build/outputs/bundle/

      - name: Upload APK
        if: startsWith(github.ref, 'refs/heads/develop')
        uses: actions/upload-artifact@v2
        with:
          name: paguei-${{ env.version }}-${{ env.date }}
          path: app/build/outputs/apk/

  git:
    needs: [ build ]
    name: Create branch release or tags
    runs-on: self-hosted
    steps:
      - name: Create Branch Release
        if: startsWith(github.ref, 'refs/heads/develop')
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          branch: release/v${{ env.version }}
          sha: '${{ github.event.pull_request.head.sha }}'