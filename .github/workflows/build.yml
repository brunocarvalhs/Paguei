name: Build Application Debug
on:
  push:
    branches: [ develop ]

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  JDK_VERSION: 11
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m"
  BUILD_TOOLS_VERSION: "30.0.2"
  APP_NAME: "Paguei"
  FIREBASE_APP_ID: "1:647363137025:android:c8a5e1e90d509af313fa00"

jobs:
  checkout-and-setup:
    runs-on: ubuntu-24.04
    name: Checkout and Setup Environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ env.ANDROID_HOME }}" > local.properties
          
      - name: Create google-services.json
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json
          
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Upload Workspace
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: ./

  unit-tests:
    runs-on: ubuntu-24.04
    name: Run Unit Tests
    needs: checkout-and-setup
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Create google-services.json
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  lint-check:
    runs-on: ubuntu-24.04
    name: Run Lint Check
    needs: checkout-and-setup
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Create google-services.json
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  build:
    runs-on: ubuntu-24.04
    name: Build
    needs: [unit-tests, lint-check]
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Create google-services.json
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Build APK Debug
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-apk-debug
          path: app/build/outputs/apk/debug/*.apk

  deploy-firebase:
    runs-on: ubuntu-24.04
    name: Deploy to Firebase App Distribution
    needs: [build]
    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-apk-debug
          path: app/build/outputs/apk/release/

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash
      
      - name: Upload APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/release/*.apk \
            --app "${{ env.FIREBASE_APP_ID }}" \
            --release-notes "release automatica" \
            --token "${{ secrets.FIREBASE_AUTH_TOKEN }}"
