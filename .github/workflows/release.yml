name: Build Application Release
on:
  push:
    branches: [ master ]
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  JDK_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m"
  BUILD_TOOLS_VERSION: "34.0.0"
  APP_NAME: "Paguei"

jobs:
  checkout-and-setup:
    runs-on: ubuntu-24.04
    name: Checkout and Setup Environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ env.ANDROID_HOME }}" > local.properties

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Upload Workspace
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: ./

  unit-tests:
    runs-on: ubuntu-24.04
    name: Unit Tests
    needs: checkout-and-setup
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  lint-check:
    runs-on: ubuntu-24.04
    name: Lint Check
    needs: checkout-and-setup
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  build:
    runs-on: ubuntu-24.04
    name: Build
    needs: [unit-tests, lint-check]
    env:
      KEYSTORE_PASSWORD: ${{ secrets.ALIAS }}
      KEYSTORE_ALIAS: ${{ secrets.PASSWORD_ALIAS }}
      KEY_PASSWORD: ${{ secrets.PASSWORD_KEY }}
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace

      - name: Create google-services.json
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Check if keystore exists
        run: |
          if [ -f "app/release.keystore" ]; then
            echo "Keystore exists"
          else
            echo "::error::Keystore file 'app/release.keystore' does not exist. Please ensure it is in the correct location."
            exit 1
          fi

      - name: Build AAB
        run: ./gradlew bundleRelease
            
      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab
          path: app/build/outputs/bundle/release/*.aab

  release:
    runs-on: ubuntu-24.04
    name: Create and Upload Release
    needs: [build]
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace
        continue-on-error: true
        
      - name: Get App Version Based on Date
        run: |
          VERSION=$(grep versionName app/build.gradle.kts | sed 's/.*versionName = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_ENV
        continue-on-error: true
        
      - name: Calculate module name
        id: module_name
        run: |
          MODULE_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
          echo "module_name=$MODULE_NAME" >> $GITHUB_ENV
        continue-on-error: true
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: v${{ env.version }}
          draft: false
          prerelease: false
        continue-on-error: true

  deploy:
    runs-on: ubuntu-24.04
    name: Deploy to Google Play
    needs: release
    steps:
      - name: Download AAB Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab
          path: app/build/outputs/bundle/release/

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_JSON }}
          packageName: "br.com.brunocarvalhs.paguei"
          releaseFiles: app/build/outputs/bundle/release/*.aab
          track: production
          status: completed
          changesNotSentForReview: true
