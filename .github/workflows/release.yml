name: Build Application Release
on:
  push:
    branches: [ master ]

jobs:
  setup_environment:
    runs-on: ubuntu-latest
    name: Setup Environment
    outputs:
      jdk_version: ${{ steps.setup_env.outputs.jdk_version }}
      gradle_opts: ${{ steps.setup_env.outputs.gradle_opts }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle
        run: echo "org.gradle.daemon=false" >> $GITHUB_WORKSPACE/gradle.properties

      - name: Save state and set outputs
        id: setup_env
        run: |
          echo "jdk_version=11" >> $GITHUB_STATE
          echo "jdk_version=11" >> $GITHUB_OUTPUT
          echo "gradle_opts=-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m" >> $GITHUB_STATE
          echo "gradle_opts=-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx3072m" >> $GITHUB_OUTPUT

  unit_tests:
    needs: setup_environment
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Create google-services release file
        run: |
          rm -f app/google-services.json
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Unit tests
        run: ./gradlew testRelease --stacktrace
        env:
          JDK_VERSION: ${{ needs.setup_environment.outputs.jdk_version }}
          ANDROID_SDK_TOOLS: ${{ env.ANDROID_SDK_TOOLS }}
          GRADLE_OPTS: ${{ needs.setup_environment.outputs.gradle_opts }}

  android_lint:
    needs: setup_environment
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Create google-services release file
        run: |
          rm -f app/google-services.json
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Android Lint
        run: ./gradlew lintRelease
        env:
          JDK_VERSION: ${{ needs.setup_environment.outputs.jdk_version }}
          ANDROID_SDK_TOOLS: ${{ env.ANDROID_SDK_TOOLS }}
          GRADLE_OPTS: ${{ needs.setup_environment.outputs.gradle_opts }}

  build_apk:
    needs: [unit_tests, android_lint]
    runs-on: ubuntu-latest
    name: Build APK
    env:
      KEYSTORE_ALIAS: ${{ secrets.ALIAS }}
      KEY_PASSWORD: ${{ secrets.PASSWORD_ALIAS }}
      KEYSTORE_PASSWORD: ${{ secrets.PASSWORD_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Create google-services release file
        run: |
          rm -f app/google-services.json
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Calculate module name
        id: module_name
        run: |
          MODULE_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
          echo "module_name=$MODULE_NAME" >> $GITHUB_ENV

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.module_name }}-apk
          path: app/build/outputs/apk/**/*.apk

  build_aab:
    needs: [unit_tests, android_lint]
    runs-on: ubuntu-latest
    name: Build AAB
    env:
      KEYSTORE_ALIAS: ${{ secrets.ALIAS }}
      KEY_PASSWORD: ${{ secrets.PASSWORD_ALIAS }}
      KEYSTORE_PASSWORD: ${{ secrets.PASSWORD_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Create google-services release file
        run: |
          rm -f app/google-services.json
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 --decode > app/google-services.json

      - name: Build AAB
        run: ./gradlew bundleRelease

      - name: Calculate module name
        id: module_name
        run: |
          MODULE_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
          echo "module_name=$MODULE_NAME" >> $GITHUB_ENV

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.module_name }}-aab
          path: app/build/outputs/bundle/**/*.aab

  publish:
    needs: [build_apk, build_aab]
    runs-on: ubuntu-latest
    name: Publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Get App Version
        run: echo "version=$(cat VERSION.md)" >> $GITHUB_ENV

      - name: Calculate module name
        id: module_name
        run: |
          MODULE_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
          echo "module_name=$MODULE_NAME" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.module_name }} v${{ env.version }}
